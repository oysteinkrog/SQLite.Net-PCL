using System.IO;
using System.Threading.Tasks;
using NUnit.Framework;
using SQLite.Net.Async;

namespace SQLite.Net.Tests
{
    [TestFixture]
    public class OpenTest
    {
        private const string UnicodeText = "\u01F427 \u221E";

        [Test]
        public void UnicodePaths()
        {
            var fileName = TestPath.CreateDefaultTempFilename() + UnicodeText + ".db";
            var filePath = TestPath.CreateTemporaryDatabase(fileName);

            using (var db = new SQLiteConnection(new SQLitePlatformTest(), filePath, true))
            {
                db.CreateTable<OrderLine>();
            }

            Assert.That(filePath.Length, Is.GreaterThan(0), fileName);
        }

        [Test]
        public async Task UnicodePathsAsync()
        {
            var fileName = TestPath.CreateDefaultTempFilename() + UnicodeText + ".db";
            var filePath = TestPath.CreateTemporaryDatabase(fileName);

            var db = new SQLiteAsyncConnection(() => new SQLiteConnectionWithLock(new SQLitePlatformTest(), new SQLiteConnectionString(filePath, true)));
            await db.CreateTableAsync<OrderLine>();

            Assert.That(filePath.Length, Is.GreaterThan(0), fileName);
        }
    }
}